import re
import struct

def extract_shellcode(js_file_path, output_bin_path):
    # Read JavaScript file
    with open(js_file_path, 'r', encoding='utf-8') as f:
        js_content = f.read()

    # Find all %uXXXX patterns
    shellcode_matches = re.findall(r'%u([0-9a-fA-F]{4})', js_content)

    if not shellcode_matches:
        print("No shellcode patterns found.")
        return

    # Convert each %uXXXX to bytes in little-endian format
    shellcode_bytes = b''.join(struct.pack('<H', int(code, 16)) for code in shellcode_matches)

    # Save to .bin file
    with open(output_bin_path, 'wb') as bin_file:
        bin_file.write(shellcode_bytes)

    print(f"Shellcode extracted and saved to {output_bin_path}")

# Example usage
extract_shellcode('decoded_payload2.js', 'shellcode.bin')
