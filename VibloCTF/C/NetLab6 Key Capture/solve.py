from Crypto.Util.number import bytes_to_long, long_to_bytes
import base64

def decrypt_report(encrypted_bytes, key_b64):
    # Convert encrypted_bytes from hex-encoded ASCII bytes to real bytes
    encrypted_bytes = bytes.fromhex(encrypted_bytes.decode())
    
    # Decode base64 key to int
    key = int(base64.b64decode(key_b64).decode())

    # XOR the encrypted bytes (converted to long) with key
    decrypted_long = bytes_to_long(encrypted_bytes) ^ key

    # Convert back to bytes
    decrypted_bytes = long_to_bytes(decrypted_long)

    return decrypted_bytes.decode(errors="replace")  # Use "replace" to avoid decode errors

# Example usage
if __name__ == "__main__":
    encrypted_bytes = b'218c1d0f93ca418d6e625b61246acd86b79d0d256ed87f1c58499c63ed0f9be794132fce56bd2b2855a679ac2d4bd9191a7592a1a0a6783ac57bd352f98f93c4e22dd8d51533fb025f0bb832dd7b086a18cdd0ac088f20c315b7c54e1e9bc7be4985a6c43d397113231a0b84277d80be82c102d3c627af736ea455573b02621702fab9e20f9ff03c9c6e06a90849b44814ff25e1fbdaa182dbe9649df9559972dd24c79c6a79a424706c8cc2d099514cad23ba4a694314a952e5a7857e3dcfbe1e3753d6e247808605b2fbcd767cc38d674f6db5055b2a8a299b5855c32223676baf6a7a65ba88a78ffdf321b2d69f0d3c3c4eaa27f1184ad6f2b306438b7c0b9f02ec5d86524bcfcfe03ac06254215f2162684b0828f203e7d5cb54128448f4ca11c53704bfeabec62ab2003bbeb91a84b90552f66f3c92c75de94eb18da67ad8f347f17abc60a74850d169312b8bd494e290ea3ab410517fc21ceab5844bcb47824442bcdc29b5a652a8b67c18cb45ff71009b20d7b8fe957e0144482a30e73fc3e78a8919c33e552f95dda19cade18c3beb4824e9c9453bddd508b407bb70cef8f4ecc3924b0b90933c0d29e062cabbebf6575b70df50adebdfa64511643c776b6efc8a6ef3679fd3198ee2882688bf9273cdbb8bc999e68fd130098126deb0fefe875792a4b95db3c51c4ed17723634c3989bce7fb6f6780aac38d4406c76c15cf551f9e9504115b1aa2b84363a6b700fb96ee7fe5808cb0c5892e0a1822c6183d1f2a5fa7b372981bf4f1878635d846f6727266b0a13d0a6c'
    key_b64 = 'MzQxNjQyMDQyODMyNDIyNTUwNTM1MTcxNTUxMzkwODYxMjU4NDU0MjM5NDM1Mjk4MDE0OTkyNTI2NDc0MzgwNzUwNzU4MjQ1NzkwMjEyODYzNTkyMTgwMzMzNTI0NDAwNjkwOTEwNTUzODcyMjg5NTI5Mjk2MDU1Mzg5OTYzNDY3OTI1NDEyODc5MDM4NDM0MDI1ODgxNjc3MjcyMDk4MzUzNTg5NzU5Njk2NzU3MjU5NjM2NTUwNDkyNzE0ODk4Nzg4NjUxNzIyMzgyMTY2NjQwNTUwODI5NTU3MTMwNzU1MTY5NDYwNDYzMzU2NDY1NTk5ODY4NjU1NTUwMjEyOTA5MjIwMzgzMTkwODg5ODQ3NzE0NDI0NzY5OTU5MDUxNTIwMzc1MDk3NTE4MTYxNzI3ODQ2MjcwNTgyMDY1ODkzMzgwNzA1MTIxNDk0ODY1MzQyMjU3MTQzOTg5NjcwMDk5MTgwNTUyOTU0NjgzNjI2NjUzNDExNjY5NTgyNjMxMTU3OTE0ODUwNDUzMzg4MjAxNzY5Njk4NjMyNjMwMTkyOTY3MTU0NTg3ODc4MjY2MTkxODczNDk5OTM2NjM3MjAzMzI4NTc3NzU1MTk1ODI5NzQ0OTIzMTYzNDkxNTgyMjMzODY1Mzg3NTg4NzE1NzkyMjU4MjE5NjgxOTc5MDM1NDU2Mzk2ODMzNTEzMjUyOTEyODU0NDg4MjgzOTA1MjU1ODEyOTk0ODAwMTY1NDUzMjcyNTk1MTIwOTgzNjk3NTE4MjE3NjkxODE0ODM1NzYzNjY0NzQyNjUzMzU3MTM2Njc0NTg2NjY1MTgwNjEzMDc0MjMzMzY2MDg2NzM4NzU0OTkzOTg3MjYzMzY3MzU0MjI4NTEzMjMxMjAxMzc0MDUxNDYxNDE0ODI1NjAzMTMzODgxNDE5Njk0ODk2MjQ1Njg0MzYxOTMzMDQ3NjUzNTk3NTAwOTkxNzY1MjA3Njk4MDgxNTkxOTUyODQzMDQxOTk3NDUxMDYzNTY3NDk3MzY3MDQ0NDUwMzQ1MDc1NjI3MTc2NDUwMTc1NDQzMjI4NzAzNjc3ODcwNjg5MTY4NjE5NzY5NTI2Mjc2MTA2MzI3MDA3NzA2NzUzOTc2NTAzNzM1MzkzNDg5MjgyMDM0ODQ2NjMzNDQwMjk2ODYyOTgyNjYxMDkyMjk5OTAxMDQyNDgzMTkzNTY4ODcxODc4NjcwMDIwNDgzMTc1ODU4OTM2MjY0NTg1OTU4Njk4OTM3Mzk5NTg4NTMwNzM2ODQzNjg2MzUxMjI5NjAyNTQ1MDg2ODgxNzI3MTIyMTMwNzA1NTUzNjE4MTk3ODU2NjcyMjQzNzEwNzg4Mjk5MDc5NTAxMTkyNTA0Mzc2NjQ3NzcwMjIzNDYzOTAxMDU2OTU5NTUwMTg5MTA5MjgwODM5MzMzMzU1MzUwNDQ4MjI1NDY5MTgxMTU4ODE1MTgwODQxNzQ5MTk0NTU4Nzc2NjY3NzY1MTI1OTc1NTI4NDg3MjA2MDk2ODE3NzkyOTkyNDY3MTY5NjM1OTUxNzI1OTY4NzM1Njk0NTk2OTM2ODM2OTAyMzY2ODE1Nzc4Nzg2MzMxMzc0MjA2NDI5MzAzNTc2MjQwMjQ2MjYwOTc5ODU1Njk2NTAzNzU3OTIxNzcwOTM1NzUwNDcwMjg3Mjg5NjY0Mzk3NTQ5ODkxMzM0NzAyMDM1MjUxODAwNDgyMzM2Nzg4MzYyNzExNjIwNTMxNzM4MzUwNTQxMjIyNzgwNTE1OTQ1MDYxNDk3NjQ0NDU3NzgwNTMyMjI4MTM0OTYyNzgzODYyMTExNzU3MjgwODI2OA=='

    plaintext = decrypt_report(encrypted_bytes, key_b64)
    print("Decrypted log:", plaintext)
